{"ast":null,"code":"var _jsxFileName = \"C:\\\\project\\\\client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { observer } from \"mobx-react-lite\";\nimport React, { useEffect, useState } from \"react\";\nimport Device from \"./components/device/Device\";\nimport NavBar from \"./components/nav/NavBar\";\nimport { Context } from \"./context/context\";\nimport { fetchDevices } from \"./http/deviceAPI\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = _s(observer(_c = _s(() => {\n  _s();\n\n  const [devices, setDevices] = useState([]);\n  const [devicesMain, setDevicesMain] = useState([]);\n  useEffect(() => {\n    fetchDevices().then(data => setDevices(data));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Context.Provider, {\n    value: {\n      devicesMain,\n      devices\n    },\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Device, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}, \"nBzmdXHR6me3WGDTSYkt86dFzyA=\")), \"nBzmdXHR6me3WGDTSYkt86dFzyA=\");\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App$observer\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["observer","React","useEffect","useState","Device","NavBar","Context","fetchDevices","App","devices","setDevices","devicesMain","setDevicesMain","then","data"],"sources":["C:/project/client/src/App.js"],"sourcesContent":["import { observer } from \"mobx-react-lite\";\nimport React, { useEffect, useState } from \"react\";\nimport Device from \"./components/device/Device\";\nimport NavBar from \"./components/nav/NavBar\";\nimport { Context } from \"./context/context\";\nimport { fetchDevices } from \"./http/deviceAPI\";\n\nconst App = observer(() => {\n  const [devices, setDevices] = useState([]);\n\n  const [devicesMain, setDevicesMain] = useState([]);\n\n  useEffect(() => {\n    fetchDevices().then((data) => setDevices(data));\n  }, []);\n\n\n  return (\n    <Context.Provider value={{devicesMain, devices}}>\n      <NavBar />\n      <Device />\n    </Context.Provider>\n  );\n});\n\nexport default App;\n"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,iBAAzB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,SAASC,OAAT,QAAwB,mBAAxB;AACA,SAASC,YAAT,QAA6B,kBAA7B;;;AAEA,MAAMC,GAAG,MAAGR,QAAQ,SAAC,MAAM;EAAA;;EACzB,MAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,EAAD,CAAtC;EAEA,MAAM,CAACQ,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,CAAC,EAAD,CAA9C;EAEAD,SAAS,CAAC,MAAM;IACdK,YAAY,GAAGM,IAAf,CAAqBC,IAAD,IAAUJ,UAAU,CAACI,IAAD,CAAxC;EACD,CAFQ,EAEN,EAFM,CAAT;EAKA,oBACE,QAAC,OAAD,CAAS,QAAT;IAAkB,KAAK,EAAE;MAACH,WAAD;MAAcF;IAAd,CAAzB;IAAA,wBACE,QAAC,MAAD;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,MAAD;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAMD,CAhBmB,kCAAX,iCAAT;;MAAMD,G;AAkBN,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}